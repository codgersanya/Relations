#This script adds NRFreqRelations to the node -based on existing NRFrequencys.
#It creates UeMCNrFreqRelProfile and sets references for NRFreqRelation -based on the latest CR.
#It adds McpcPSCellProfile and sets references for NRFreqRelation -based on the latest CR.
#ENDC-NR mobility specific settings are also included at the end of the script.
#NR SA mobility is not yet covered.

lt all
unset all
!rm -r $tempdir/*.*

!echo '*****************************************************************' >> $tempdir/temp_error0.txt
!echo '** ERROR: There is no NRNetwork configured!**********************' >> $tempdir/temp_error0.txt
!echo '** Please check whether the node is configured for 5G! **********' >> $tempdir/temp_error0.txt
!echo '*****************************************************************' >> $tempdir/temp_error0.txt

!echo '**********************************************************************' >> $tempdir/temp_error1.txt
!echo '** ERROR: There are no NRCellCUs!********************************** **' >> $tempdir/temp_error1.txt
!echo '** Enable NRCellDUs first and NRCellCUs wil be autocreated, or *******' >> $tempdir/temp_error1.txt
!echo '** or define them manually! ******************************************' >> $tempdir/temp_error1.txt
!echo '**********************************************************************' >> $tempdir/temp_error1.txt

!echo '*************************************************************************************************' >> $tempdir/temp_error2.txt
!echo '** ERROR: There are no NRFrequencies ************************************************************' >> $tempdir/temp_error2.txt
!echo '** NRFrequency is autocreated by the autocreation of NRCellCU and ExternalNRCellCU.! ************' >> $tempdir/temp_error2.txt
!echo '** Xn (TermPointToGNodeB) must be ENABLED for setting up NRCellRelations to ExternalNRCellCUs. **' >> $tempdir/temp_error2.txt
!echo '** NRCellDUs must be enabled before running this script. ****************************************' >> $tempdir/temp_error2.txt
!echo '** Script execution is stopped ******************************************************************' >> $tempdir/temp_error2.txt
!echo '*************************************************************************************************' >> $tempdir/temp_error2.txt

!echo '*****************************************************************' >> $tempdir/temp_success.txt
!echo '** SUCCESS: The following NRFreqRelations have been added: ******' >> $tempdir/temp_success.txt
!echo '*****************************************************************' >> $tempdir/temp_success.txt

!echo '****************************************************************' >> $tempdir/temp_nonew.txt
!echo '** NO CHANGE: All NRFreqRelations are added already. ***********' >> $tempdir/temp_nonew.txt
!echo '** The script has finished with the check! *********************' >> $tempdir/temp_nonew.txt
!echo '****************************************************************' >> $tempdir/temp_nonew.txt

pr ^NRNetwork=
if $nr_of_mos = 0
	!cat  $tempdir/temp_error0.txt
	return
fi

mr NRNetworkgroup
ma NRNetworkgroup ^NRNetwork=
	for $mo in NRNetworkgroup
	$rdnNRNetwork = rdn($mo)
done

pr ^NRCellCU=
if $nr_of_mos = 0
	!cat  $tempdir/temp_error1.txt
	return
fi

mr cellgroup
ma cellgroup ^NRCellCU=
	for $mo in cellgroup
		$i = $i + 1
		$rdnnrcell[$i] = rdn($mo)
		$ldnnrcell[$i] = ldn($mo)
		$moidnrcell[$i] = $ldnnrcell[$i] -s .*=
	done

pr ^NRFrequency=
if $nr_of_mos = 0
	!cat  $tempdir/temp_error2.txt
	return
fi

mr nrfrequencygroup
ma nrfrequencygroup ^NRFrequency=
	for $mo in nrfrequencygroup
		$j = $j + 1
		$rdnnrfrequency[$j] = rdn($mo)
		$ldnnrfrequency[$j] = ldn($mo)
		$moidnrfrequency[$j] = $rdnnrfrequency[$j] -s .*=
		$moidnrfrequency[$j] = $moidnrfrequency[$j] -s -.*
		
done

func nonew
	$linecontent = testfile($tempdir/result.txt)
	if $nr_of_lines  = 0
		!cat $tempdir/temp_nonew.txt
	else
		!cat $tempdir/temp_success.txt
		!cat $tempdir/result.txt
	fi
endfunc

func result
	pr $ldnnrcell[$m],NRFreqRelation=$moidnrfrequency[$k]
	if $nr_of_mos != 0
		!echo $ldnnrcell[$m],NRFreqRelation=$moidnrfrequency[$k] >> $tempdir/result.txt
	fi
endfunc

func relcreate
	get $rdnnrcell[$m] threshServingLowQ > $threshServingLowQ[$m]
	if $threshServingLowQ[$m] >= 0
		crn $ldnnrcell[$m],NRFreqRelation=$moidnrfrequency[$k]
		nRFrequencyRef $ldnnrfrequency[$k]
		threshXLowQ 0
		threshXHighQ 0
		end
	else
		crn $ldnnrcell[$m],NRFreqRelation=$moidnrfrequency[$k]
		nRFrequencyRef $ldnnrfrequency[$k]
		end
	fi
	result
endfunc


func add_nrfrequency_to_cell
	for $k = 1 to $j
		print $rdnnrcell[$m],NRFreqRelation= nRFrequencyRef $rdnNRNetwork,$rdnnrfrequency[$k]
		get $rdnnrcell[$m],NRFreqRelation= nRFrequencyRef $rdnNRNetwork,$rdnnrfrequency[$k]
		if $nr_of_mos = 0
			relcreate
		fi
	done
endfunc

for $m = 1 to $i
	add_nrfrequency_to_cell
done


#*****************************************************#
#   ENDC-NR mobility specific settings starts here    #
#*****************************************************#

mr GNBCUCPFunctiongroup
ma GNBCUCPFunctiongroup ^GNBCUCPFunction=
for $mo in GNBCUCPFunctiongroup
	$GNBCUCPFunctionid = rdn($mo)
done

#UeMC
mr UeMCgroup
ma UeMCgroup ^UeMC=
for $mo in UeMCgroup
	$moidUeMC = ldn($mo)
done

#crn $GNBCUCPFunctionid,$moidUeMC,UeMCNrFreqRelProfile=1 #autocreated
#connModeAllowedPCell false
#connModePrioPCell 7
#userLabel 
#end

#cr $GNBCUCPFunctionid,$moidUeMC,UeMCNrFreqRelProfile=1,UeMCNrFreqRelProfileUeCfg=Base #autocreated
#connModeAllowedPSCell false #default

$y = 0
for $x = 1 to 6
	pr $GNBCUCPFunctionid,UeMC=1,UeMCNrFreqRelProfile=$x
	if $nr_of_mos = 0
		$y = 1
		crn $GNBCUCPFunctionid,UeMC=1,UeMCNrFreqRelProfile=$x
		ueConfGroupType 0
		end
		#crn $GNBCUCPFunctionid,UeMC=1,UeMCNrFreqRelProfile=$x,UeMCNrFreqRelProfileUeCfg=Base #autocreated
		#connModeAllowedPCell false
		#connModeAllowedPSCell false
		#connModePrioPCell 7
		#connModePrioPSCell 2
		#prefUeGroupList 
		#ueConfGroupList 
		#ueGroupList 
		#end
	fi
done
if $y = 1
	wait 1
	lt all
fi

#NRFreqRelation=156510 UeMCNrFreqRelProfile=5 #n281 connModePrioPSCell 2
#NRFreqRelation=374210 UeMCNrFreqRelProfile=4 #n031 connModePrioPSCell 4
#NRFreqRelation=433250 UeMCNrFreqRelProfile=3 #n011 connModePrioPSCell 1
#NRFreqRelation=636384 UeMCNrFreqRelProfile=1
#NRFreqRelation=646656 UeMCNrFreqRelProfile=2
#NRFreqRelation=529490 UeMCNrFreqRelProfile=6 #n071 connModePrioPSCell 5

set NRFreqRelation=156510 ueMCNrFreqRelProfileRef UeMC=1,UeMCNrFreqRelProfile=5
set NRFreqRelation=374210 ueMCNrFreqRelProfileRef UeMC=1,UeMCNrFreqRelProfile=4
set NRFreqRelation=433250 ueMCNrFreqRelProfileRef UeMC=1,UeMCNrFreqRelProfile=3
set NRFreqRelation=636384 ueMCNrFreqRelProfileRef UeMC=1,UeMCNrFreqRelProfile=1
set NRFreqRelation=646656 ueMCNrFreqRelProfileRef UeMC=1,UeMCNrFreqRelProfile=2
set NRFreqRelation=529490 ueMCNrFreqRelProfileRef UeMC=1,UeMCNrFreqRelProfile=6

set UeMC=1,UeMCNrFreqRelProfile=Default,UeMCNrFreqRelProfileUeCfg=Base connModePrioPSCell 5
set UeMC=1,UeMCNrFreqRelProfile=1,UeMCNrFreqRelProfileUeCfg=Base connModePrioPSCell 7
set UeMC=1,UeMCNrFreqRelProfile=2,UeMCNrFreqRelProfileUeCfg=Base connModePrioPSCell 7
set UeMC=1,UeMCNrFreqRelProfile=3,UeMCNrFreqRelProfileUeCfg=Base connModePrioPSCell 1
set UeMC=1,UeMCNrFreqRelProfile=4,UeMCNrFreqRelProfileUeCfg=Base connModePrioPSCell 4
set UeMC=1,UeMCNrFreqRelProfile=5,UeMCNrFreqRelProfileUeCfg=Base connModePrioPSCell 2
set UeMC=1,UeMCNrFreqRelProfile=6,UeMCNrFreqRelProfileUeCfg=Base connModePrioPSCell 5
set UeMCNrFreqRelProfileUeCfg connModeAllowedPSCell true

set NRCellCU ueMCCellProfileRef UeMC=1,UeMCCellProfile=1

#NR Traffic Steering

pr TrStPSCellProfile=1
if $nr_of_mos = 0
	crn $GNBCUCPFunctionid,TrafficSteering=1,TrStPSCellProfile=1
	userLabel PSCCtoHighPrio 1
	end	
	#crn $GNBCUCPFunctionid,TrafficSteering=1,TrStPSCellProfile=1,TrStPSCellProfileUeCfg=Base #autocreated
	#hiPrioDetInactiveTime 500
	#hiPrioDetMeasurementTime 120000
	#hiPrioDetStartTime 10
	#rsrpCandidateA5 hysteresis=20,threshold2=-114,timeToTrigger=640
	#userLabel 
	#end
	wait 1
	lt all
fi

set NRCellCU trStPSCellProfileRef TrafficSteering=1,TrStPSCellProfile=1
set TrafficSteering=1,TrStPSCellProfile=1,TrStPSCellProfileUeCfg=Base rsrpCandidateA5 hysteresis=20, threshold2=-114, timeToTrigger=640
set nrcellcu hiPrioDetEnabled true


#NR Mobility at Poor Coverage

#cr $GNBCUCPFunctionid,Mcpc=1,McpcPSCellProfile=1 #autocreated
#cr $GNBCUCPFunctionid,Mcpc=1,McpcPSCellProfile=1,McpcPSCellProfileUeCfg=Base #autocreated

#crn $GNBCUCPFunctionid,Mcpc=1,McpcPSCellNrFreqRelProfile=Default #autocreated
#userLabel 
#end

#crn GNBCUCPFunction=gNBId569012,Mcpc=1,McpcPSCellNrFreqRelProfile=Default,McpcPSCellNrFreqRelProfileUeCfg=Base #autocreated
#inhibitMeasForCellCandidate false
#rsrpCandidateA5Offsets threshold1Offset=0,threshold2Offset=0
#userLabel 
#end

set NRFreqRelation mcpcPSCellNrFreqRelProfileRef Mcpc=1,McpcPSCellNrFreqRelProfile=Default
set NRCellCU mcpcPSCellProfileRef Mcpc=1,McpcPSCellProfile=1
set nrcellcu mcpcPSCellEnabled true
set McpcPSCellNrFreqRelProfileUeCfg inhibitMeasForCellCandidate false
set McpcPSCellNrFreqRelProfileUeCfg rsrpCandidateA5Offsets threshold1Offset=0, threshold2Offset=0 
set Mcpc=1,McpcPSCellProfile=1,McpcPSCellProfileUeCfg=Base lowHighFreqPrioClassification 7
set Mcpc=1,McpcPSCellProfile=1,McpcPSCellProfileUeCfg=Base mcpcQuantityList 0
set Mcpc=1,McpcPSCellProfile=1,McpcPSCellProfileUeCfg=Base rsrpCriticalEnabled true
set Mcpc=1,McpcPSCellProfile=1,McpcPSCellProfileUeCfg=Base rsrpSearchTimeRestriction 5000
set Mcpc=1,McpcPSCellProfile=1,McpcPSCellProfileUeCfg=Base rsrpSearchZone hysteresis=30, threshold=-95, timeToTrigger=160, timeToTriggerA1=-1
set Mcpc=1,McpcPSCellProfile=1,McpcPSCellProfileUeCfg=Base rsrpCandidateA5 hysteresis=20, threshold1=-100, threshold2=-98, timeToTrigger=320
set Mcpc=1,McpcPSCellProfile=1,McpcPSCellProfileUeCfg=Base rsrpCritical hysteresis=10, threshold=-124, timeToTrigger=160

#Measurement Gap-Aware NR Scheduling
#0  --> 1
#15(INACTIVITYTIMER_100MS) --> 7(INACTIVITYTIMER_8MS)
#39(ONDURATIONTIMER_10MS) --> 38(ONDURATIONTIMER_8MS)

$i = 0
mr eutrancellfdd
ma eutrancellfdd ^EUtranCellFDD=
for $mo in eutrancellfdd
	get $mo administrativestate > $admsteutrancell
	if $admsteutrancell ~ 1
		$i = $i + 1
		$rdneutrancellfdd[$i] = rdn($mo)
		bl $mo
	fi
done
set EUtranCellFDD measGapPattern 1
for $k = 1 to $i
	deb $rdneutrancellfdd[$k]
done

$m = 0
mr NRCellDU
ma NRCellDU ^NRCellDU=
for $mo in NRCellDU
	get $mo administrativestate > $admstnrcell
	if $admstnrcell ~ 1
		$m = $m + 1
		$rdnNRCellDU[$m] = rdn($mo)
		bl $mo
	fi
done	
set NRCellDU drxInactivityTimer 7
set NRCellDU drxOnDurationTimer 38
for $k = 1 to $m
	deb $rdnNRCellDU[$k]
done

#Intra Freq NR Mobility

mr GNBCUCPFunction
ma GNBCUCPFunction ^GNBCUCPFunction=
for $mo in GNBCUCPFunction
	$GNBCUCPFunction = rdn($mo)
	$GNBCUCPFunction = $GNBCUCPFunction -s .*=
done
 
pr IntraFreqMCCellProfile=1
if $nr_of_mos = 0
	cr GNBCUCPFunction=$GNBCUCPFunction,IntraFreqMC=1,IntraFreqMCCellProfile=1
	wait 1
	lt all
fi
set IntraFreqMC=1,IntraFreqMCCellProfile=1 rsrpSCellCoverage threshold=-138,hysteresis=40
set IntraFreqMC=1,IntraFreqMCCellProfile=1,IntraFreqMCCellProfileUeCfg=Base rsrpBetterSpCell timeToTrigger=320,offset=20
set IntraFreqMC=1,IntraFreqMCCellProfile=1,IntraFreqMCCellProfileUeCfg=Base betterSpCellTriggerQuantity 0
set IntraFreqMC=1,IntraFreqMCCellProfile=1,IntraFreqMCCellProfileUeCfg=Base endcActionEvalFail 0
set IntraFreqMC=1,IntraFreqMCCellProfile=1,IntraFreqMCCellProfileUeCfg=Base rsrpBetterSpCell hysteresis=10,offset=30,timeToTrigger=640
set IntraFreqMC=1,IntraFreqMCCellProfile=1,IntraFreqMCCellProfileUeCfg=Base rsrqBetterSpCell hysteresis=10,offset=30,timeToTrigger=640
set NRCellCU intraFreqMCCellProfileRef GNBCUCPFunction=$GNBCUCPFunction,IntraFreqMC=1,IntraFreqMCCellProfile=1

pr IntraFreqMCFreqRelProfile=1
if $nr_of_mos = 0
	cr GNBCUCPFunction=$GNBCUCPFunction,IntraFreqMC=1,IntraFreqMCFreqRelProfile=1
	lt all
	wait 1
fi
set IntraFreqMC=1,IntraFreqMCFreqRelProfile=1,IntraFreqMCFreqRelProfileUeCfg=Base rsrpSCellCoverageThrOffset 0
set IntraFreqMC=1,IntraFreqMCFreqRelProfile=1,IntraFreqMCFreqRelProfileUeCfg=Base rsrqSCellCoverageThrOffset 0
set NRCellCU.*,NRFreqRelation intraFreqMCFreqRelProfileRef 

#*****************************************************#
#   ENDC-NR mobility specific settings ends here      #
#*****************************************************#

nonew