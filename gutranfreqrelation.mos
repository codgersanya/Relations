#*************************************#
#                                     #
#       gutranfreqrelation.mos        #
#                                     #
#*************************************#

#This script includes special parameter settings - different from default.
#This script adds Lrat.GUtranFreqRelations -based on existing GUtranSyncSignalFrequencies to EUtranCell's 18C1, 21C1, 26C1, 26C2, 26C3
#This script adds ESS sharing groups for L2100-NR2100.
#GUtranFreqRelation.cellReselectionPriority is set to -1 for all instances.
#ExternalGNodeBFunction, TermPointToGNB must be defined before running this script: See: https://github.com/codgersanya/TermPointtoGNB
#Existing ExternalGUtranCells and GUtranSyncSignalFrequencies are also prerequisite.
#These latter 2 are autocreated -after TermPointToGNB and NrCellDU is up.

#*************************************#
#        initial variables            #
#*************************************#

#l+mm
lt all
unset all
$return = 0
!rm -r $tempdir/*.*

#*************************************#
#             Printouts               #
#*************************************#

!echo '*****************************************************' >> $tempdir/temp_error1.txt
!echo '** ERROR: There are no EUtranCellFDDs!             **' >> $tempdir/temp_error1.txt
!echo '** Please define them before running this script!  **' >> $tempdir/temp_error1.txt
!echo '** Script execution is stopped                     **' >> $tempdir/temp_error1.txt
!echo '*****************************************************' >> $tempdir/temp_error1.txt
 
!echo '***************************************************************************' >> $tempdir/temp_error2.txt
!echo '** ERROR: There are no GUtranSyncSignalFrequencies                       **' >> $tempdir/temp_error2.txt
!echo '** Please define ExternalGNodeBFunction(s) and TermPointToGNB(s) first!  **' >> $tempdir/temp_error2.txt
!echo '** GUtranSyncSignalFrequency will be autocreated after                   **' >> $tempdir/temp_error2.txt
!echo '** TermPointToGNB and NRCellDU become operational!                       **' >> $tempdir/temp_error2.txt
!echo '** Script execution is stopped                                           **' >> $tempdir/temp_error2.txt
!echo '***************************************************************************' >> $tempdir/temp_error2.txt

!echo '*****************************************************************' >> $tempdir/success.txt
!echo '** SUCCESS: The following GUtranFreqRelations have been added: **' >> $tempdir/success.txt
!echo '*****************************************************************' >> $tempdir/success.txt

!echo '********************************************************************' >> $tempdir/temp_nonew.txt
!echo '** NO CHANGE: All GUtranFreqRelations are added already. ***********' >> $tempdir/temp_nonew.txt
!echo '** The script has finished with the check! *************************' >> $tempdir/temp_nonew.txt
!echo '********************************************************************' >> $tempdir/temp_nonew.txt

!echo 'The following sharinggroups have already been defined:' >> $tempdir/existing_sharinggroup.txt
!echo 'The following new sharinggroups have been added:' >> $tempdir/new_sharinggroup.txt

#*************************************#
#       Function definitions          #
#*************************************#

func mocheck
	pr ^EUtranCellFDD=
	if $nr_of_mos = 0
		!cat  $tempdir/temp_error1.txt
		return
	fi
	
	mr cellgroup
	ma cellgroup ^EUtranCellFDD=......11
	ma cellgroup ^EUtranCellFDD=......2
		for $mo in cellgroup
			$i = $i + 1
			$ldnEUtranCellFDD[$i] = ldn($mo)
			$moidEUtranCellFDD[$i] = $ldnEUtranCellFDD[$i] -s .*=
		done
	
	pr ^GUtranSyncSignalFrequency=
	if $nr_of_mos = 0
		!cat  $tempdir/temp_error2.txt
		return
	fi
	
	mr GUtranFrequencygroup
	ma GUtranFrequencygroup ^GUtranSyncSignalFrequency=
		for $mo in GUtranFrequencygroup
			$j = $j + 1
			$ldnGUtranFrequency[$j] = ldn($mo)
			$moidGUtranFrequency[$j] = $ldnGUtranFrequency[$j] -s .*=
			$moidGUtranFrequency[$j] = $moidGUtranFrequency[$j] -s -.*
			$gUtranSyncSignalFrequencyRef[$j] = $ldnGUtranFrequency[$j] -s ENodeBFunction=1,
	done
endfunc 

func settings
	set GUtranFreqRelation= allowedPlmnList mcc=234,mnc=30,mncLength=2
endfunc

func nonew
	$linecontent = testfile($tempdir/result.txt)
	if $nr_of_lines  = 0
		!cat $tempdir/temp_nonew.txt
	else
		!cat $tempdir/temp_success.txt
		!cat $tempdir/result.txt
	fi
	!cat $tempdir/existing_sharinggroup.txt
	!cat $tempdir/new_sharinggroup.txt
endfunc

func result
	pr $ldnEUtranCellFDD[$m],GUtranFreqRelation=$moidGUtranFrequency[$k]
	if nr_of_mos != 0
	!echo $ldnEUtranCellFDD[$m],GUtranFreqRelation=$moidGUtranFrequency[$k] >> $tempdir/result.txt
	fi
endfunc

func add_all_GUtranFrequency_to_cell
	for $k = 1 to $j
		get $ldnEUtranCellFDD[$m],GUtranFreqRelation= gUtranSyncSignalFrequencyRef $gUtranSyncSignalFrequencyRef[$k]
		if $nr_of_mos = 0
			crn $ldnEUtranCellFDD[$m],GUtranFreqRelation=$moidGUtranFrequency[$k]
			gUtranSyncSignalFrequencyRef $ldnGUtranFrequency[$k]
			cellReselectionPriority -1
			end
			result
		fi
	done
endfunc

#*************************************#
#       main program starts           #
#*************************************#

mocheck
for $m = 1 to $i
	add_all_GUtranFrequency_to_cell
done
settings
#sharinggroup
nonew